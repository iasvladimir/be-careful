//
//  VerifyCodeInteractor.swift
//  BeCareful
//
//  Created by Mariana Parente on 24/08/20.
//  Copyright (c) 2020 Jose Alberto. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol VerifyCodeBusinessLogic {
    func getPhoneNumber()
    func completeRegister(request: VerifyCode.RegisterSuccess.Request)
}

protocol VerifyCodeDataStore {
    //var myDataStoreVar: String { get set }
}

class VerifyCodeInteractor: VerifyCodeBusinessLogic, VerifyCodeDataStore {
    var presenter: VerifyCodePresentationLogic?
    var worker: RegisterWorker?
    
    private var deviceID = UIDevice.current.identifierForVendor?.uuidString
    
    // MARK: Actions
    func getPhoneNumber() {
        let response = VerifyCode.DataPhoneNumber.Response(phoneNumber: AppUserDefaults.phoneNumber)
        presenter?.presentNumber(response: response)
    }
    
    func completeRegister(request: VerifyCode.RegisterSuccess.Request) {
        if let status = worker?.isValidCode(code: request.code), status {
            let response = VerifyCode.RegisterSuccess.Response(errorMessage: "Código no válido")
            presenter?.presentError(response: response)
        } else {
            let data = RegisterOTP(phone: AppUserDefaults.phoneNumber, idDevice: deviceID ?? "", otp: request.code)
            
            worker?.completeRegister(data: data) { [weak self] error in
                if error == nil {
                    self?.presenter?.presentRegisterSuccess()
                } else {
                    let response = VerifyCode.RegisterSuccess.Response(errorMessage: error!.localizedDescription)
                    self?.presenter?.presentError(response: response)
                }
            }
        }
    }
}
